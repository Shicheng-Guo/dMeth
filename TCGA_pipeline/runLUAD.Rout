
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(data.table)
> library(scales)
> library(stringr)
> library(e1071)
> library(ggplot2)
Registered S3 methods overwritten by 'ggplot2':
  method         from 
  [.quosures     rlang
  c.quosures     rlang
  print.quosures rlang
> library(MASS)
> library(gridExtra)
> library(quantreg)
Loading required package: SparseM

Attaching package: ‘SparseM’

The following object is masked from ‘package:base’:

    backsolve

> library(quadprog)
> #library(EMeth)
> 
> # the raw data of DNA metylation is too large to be kept in gitHub
> # here is the local path for DNA methylation data
> path.data = "~/Hutch-Research/Data/Real"
> path.work = '~/dMeth/TCGA_pipeline'
> source('~/EMeth/EMeth/R/emeth.R')
> source('~/EMeth/EMeth/R/utils.R')
> source('~/EMeth/EMeth/R/cv.emeth.R')
> source('~/EMeth/source/_lib.R')
> # ------------------------------------------------------------
> # read in pure cell type data
> # ------------------------------------------------------------
> 
> path.ref = "../cell_type_specific_reference/data"
> 
> info = fread(file.path(path.ref, "methylation_pure_ct_info.txt.gz"))
Registered S3 method overwritten by 'R.oo':
  method        from       
  throw.default R.methodsS3
> dim(info)
[1] 220886     31
> info[1:2,]
           ID       Name Infinium_Design_Type Next_Base Color_Channel
1: cg00000029 cg00000029                   II                        
2: cg00000236 cg00000236                   II                        
   Genome_Build CHR  MAPINFO Chromosome_36 Coordinate_36 Strand Probe_SNPs
1:           37  16 53468112            16      52025613      F         NA
2:           37   8 42263294             8      42382451      R         NA
   Probe_SNPs_10 Random_Loci Methyl27_Loci UCSC_RefGene_Name
1:            NA          NA            NA              RBL2
2:            NA          NA            NA       VDAC3;VDAC3
   UCSC_RefGene_Accession UCSC_RefGene_Group   UCSC_CpG_Islands_Name
1:              NM_005611            TSS1500 chr16:53468284-53469209
2: NM_005662;NM_001135694        3'UTR;3'UTR                        
   Relation_to_UCSC_CpG_Island Phantom DMR Enhancer HMM_Island
1:                     N_Shore                   NA           
2:                                               NA           
   Regulatory_Feature_Name Regulatory_Feature_Group  DHS RANGE_START RANGE_END
1:    16:53467838-53469685      Promoter_Associated TRUE    53468112  53468235
2:                                                    NA    42263294  42263417
       RANGE_GB SPOT_ID
1:  NC_000016.9      NA
2: NC_000008.10      NA
> 
> dat = fread(file.path(path.ref, 
+                       "methylation_pure_ct_rmPC2_data_signif4.txt.gz"))
> dim(dat)
[1] 220886    189
> dat[1:2,1:5]
   GSM861653 GSM861654 GSM861655 GSM861656 GSM861657
1:    0.6328    0.6211    0.6287    0.6397    0.6260
2:    0.8424    0.8050    0.8104    0.8338    0.8415
> 
> sam = fread(file.path(path.ref, "methylation_pure_ct_sample.txt"))
> dim(sam)
[1] 189   3
> sam[1:2,]
          id label   study
1: GSM861653  CD4T Reinius
2: GSM861654  CD4T Reinius
> 
> table(names(dat) == sam$id)

TRUE 
 189 
> 
> dat = data.matrix(dat)
> table(sam$label)

         B       CD4T       CD8T   Monocyte Neutrophil         NK       Treg 
         6         60         37         40         21         21          4 
> rownames(dat) = info$ID
> 
> # ------------------------------------------------------------
> # read DNA methylation data
> # ------------------------------------------------------------
> setwd('~/Hutch-Research/Data/Real')
> datM = fread(file = "luad_methylation.txt", header=TRUE)
> sampinfo = fread('luad_sample_info.txt',header = FALSE)
> cpg <- unlist(datM[,1])
> colnames(datM) <- gsub('^X',"",colnames(datM))
> datM <- datM[,-1]
> rownames(datM) = cpg
> 
> dir0 = "../TCGA_results/clinical_data/"
> setwd('~/dMeth/TCGA_pipeline/')
> tcga_purity = fread(paste0(dir0, "TCGA_mastercalls.abs_tables_JSedit.fixed.txt"))
> barcode = list()
> base_string = '%s-%s-%s'
> for(i in 1:length(tcga_purity$array)){
+   v1 <- strsplit(tcga_purity$array[i],'-')[[1]][1:3]
+   temp <- do.call(sprintf,c(fmt = base_string, as.list(v1)))
+   barcode = c(barcode,temp)
+ }
> sampbcr <- sampinfo[,2]
> uniq_bcr <- barcode[!(duplicated(barcode)|duplicated(barcode,fromLast = TRUE))]
> sampbcr <- sampbcr[!(duplicated(sampbcr)|duplicated(sampbcr,fromLast = TRUE))]
> sampinfo <- sampinfo[which(unlist(sampinfo[,2]) %in% unlist(sampbcr)),]
> ind <- which(sampinfo$V2 %in% barcode)
> mat2 <- unlist(intersect(unlist(sampinfo[,2]),barcode))
> 
> patient_id <- sampinfo$V3[match(mat2, sampinfo$V2)] 
> datM <- subset(datM, select = patient_id)
> 
> purity <- tcga_purity[match(mat2,barcode),]
> purity$patient_id <- patient_id
> filena <- which(is.na(purity$purity))
> purity <- subset(purity, !is.na(purity))
> rownames(purity) <- purity$patient_id
> datM <- subset(datM, select = -filena)
> rownames(datM) <- cpg
> dim(datM)
[1] 396065    416
> 
> 
> # ------------------------------------------------------------
> # read in probes to be used
> # ------------------------------------------------------------
> 
> load(file.path(path.ref, "ref_966probes.RData"))
> ls()
 [1] "barcode"                       "base_string"                  
 [3] "bclassE"                       "cpg"                          
 [5] "cv.emeth"                      "dat"                          
 [7] "datM"                          "deconv.init"                  
 [9] "deconvEM"                      "deconvEM_CV"                  
[11] "deconvEM_CV_laplace"           "deconvEM_laplace"             
[13] "dir0"                          "dlaplace"                     
[15] "emeth"                         "enet"                         
[17] "estmu"                         "filena"                       
[19] "filterGene"                    "getCT"                        
[21] "glm.log.normal"                "i"                            
[23] "ind"                           "info"                         
[25] "iOverlap"                      "log.normal.mixture"           
[27] "log.normal.mixture.binary"     "log.normal.mixture.knownRho"  
[29] "log.normal.mixture.knownScale" "ls.log.normal"                
[31] "mat2"                          "mixEM"                        
[33] "normal.mixture.binary"         "path.data"                    
[35] "path.ref"                      "path.work"                    
[37] "patient_id"                    "plot1"                        
[39] "probe2use"                     "probeFilterRsq"               
[41] "probeSelect"                   "purity"                       
[43] "rdirichlet"                    "sam"                          
[45] "sampbcr"                       "sampinfo"                     
[47] "tcga_purity"                   "temp"                         
[49] "uniq_bcr"                      "v1"                           
[51] "wls"                           "wls_signal"                   
[53] "wls.log.normal"                "wlsEM"                        
> length(probe2use)
[1] 966
> length(unique(probe2use))
[1] 966
> 
> table(probe2use %in% rownames(datM))

TRUE 
 966 
> table(probe2use %in% rownames(dat))

TRUE 
 966 
> 
> X  = dat[match(probe2use, rownames(dat)),]
> dim(X)
[1] 966 189
> X[1:2,1:5]
           GSM861653 GSM861654 GSM861655 GSM861656 GSM861657
cg10472651    0.4202    0.4898    0.4347    0.5290    0.4395
cg27603015    0.6243    0.6421    0.6768    0.6456    0.7165
> 
> dim(sam)
[1] 189   3
> table(sam$id == colnames(X))

TRUE 
 189 
> table(sam$label)

         B       CD4T       CD8T   Monocyte Neutrophil         NK       Treg 
         6         60         37         40         21         21          4 
> cellTypes = unique(sam$label)
> 
> # ------------------------------------------------------------
> # extract methylation data from tumor samples
> # ------------------------------------------------------------
> 
> ys = datM[match(rownames(X), rownames(datM)),]
> dim(ys)
[1] 966 416
> ys[1:2,1:5]
       4384     4390     4396     4405     4410
1: 0.391124 0.702806 0.704656 0.389577 0.423626
2: 0.496923 0.817323 0.809448 0.714030 0.702150
> 
> ys_na      = which(apply(is.na(ys),2,any))
> eta_abs_na = which(is.na(purity$purity))
> 
> any.na = union(ys_na,eta_abs_na)
> any.na
 [1]   1  25  40  47  64  66  67  68  69  70  71 196 198 203 215 224 239 273 280
[20] 286 292 352 376
> 
> ys = subset(ys,select = -any.na)
> purity <- purity[-any.na,]
> 
> dim(ys)
[1] 966 393
> ys[1:2,1:5]
       4390     4396     4405     4410     4415
1: 0.702806 0.704656 0.389577 0.423626 0.749399
2: 0.817323 0.809448 0.714030 0.702150 0.744003
> table(colnames(ys) == purity$patient_id)

TRUE 
 393 
> #-------------------------------------------------------------
> # Estimate Mean Matrix mu
> #-------------------------------------------------------------
> 
> mu = matrix(NA, nrow = dim(X)[1], ncol = length(cellTypes))
> s2 = matrix(NA, nrow = dim(X)[1], ncol = length(cellTypes))
> 
> row.names(mu) = row.names(s2) = rownames(X)
> colnames(mu)  = colnames(s2)  = cellTypes
> 
> for(ct in cellTypes){
+   sam.ct = unlist(sam[which(sam[,2]==ct),1])
+   dat.ct = X[,sam.ct]
+   mu[,ct] = rowMeans(dat.ct,na.rm=TRUE)
+   s2[,ct] = apply(dat.ct,1,sd,na.rm = TRUE)^2
+ }
> 
> #----------------------------------------------------------------------
> # Read Estimation from Expression Data, take intersection of the 
> # samples with cell type estimation from expression and DNA methylation
> #----------------------------------------------------------------------
> 
> fnm = '_cibersortx_results/LUAD_composition_cibersortx.txt'
> est_expr = fread(fnm)
> dim(est_expr)
[1] 509  26
> est_expr[1:2,]
   Mixture B cells naive B cells memory Plasma cells T cells CD8
1:    2656    0.10961210              0   0.16416725  0.10805779
2:    6146    0.03505888              0   0.06553761  0.03328438
   T cells CD4 naive T cells CD4 memory resting T cells CD4 memory activated
1:                 0                  0.1562781                  0.049769906
2:                 0                  0.4132641                  0.006073503
   T cells follicular helper T cells regulatory (Tregs) T cells gamma delta
1:                         0                          0                   0
2:                         0                          0                   0
   NK cells resting NK cells activated  Monocytes Macrophages M0 Macrophages M1
1:       0.03516298                  0 0.02907419     0.06790641     0.05415519
2:       0.11595111                  0 0.05081389     0.03989893     0.03487703
   Macrophages M2 Dendritic cells resting Dendritic cells activated
1:      0.1144218              0.02093043                0.02590449
2:      0.1248947              0.00000000                0.02350145
   Mast cells resting Mast cells activated Eosinophils Neutrophils P-value
1:         0.06094592           0.00000000 0.003613439  0.00000000       0
2:         0.01580827           0.02949642 0.000000000  0.01153972       0
   Correlation      RMSE
1:   0.6626044 0.7868400
2:   0.2703227 0.9773981
> 
> samname  = str_replace(est_expr$Mixture, "^X", "")
> length(samname)
[1] 509
> samname[1:5]
[1] "2656" "6146" "5645" "3917" "2666"
> 
> est_expr = data.matrix(est_expr[,-1])
> rownames(est_expr) = samname
> dim(est_expr)
[1] 509  25
> est_expr[1:2,]
     B cells naive B cells memory Plasma cells T cells CD8 T cells CD4 naive
2656    0.10961210              0   0.16416725  0.10805779                 0
6146    0.03505888              0   0.06553761  0.03328438                 0
     T cells CD4 memory resting T cells CD4 memory activated
2656                  0.1562781                  0.049769906
6146                  0.4132641                  0.006073503
     T cells follicular helper T cells regulatory (Tregs) T cells gamma delta
2656                         0                          0                   0
6146                         0                          0                   0
     NK cells resting NK cells activated  Monocytes Macrophages M0
2656       0.03516298                  0 0.02907419     0.06790641
6146       0.11595111                  0 0.05081389     0.03989893
     Macrophages M1 Macrophages M2 Dendritic cells resting
2656     0.05415519      0.1144218              0.02093043
6146     0.03487703      0.1248947              0.00000000
     Dendritic cells activated Mast cells resting Mast cells activated
2656                0.02590449         0.06094592           0.00000000
6146                0.02350145         0.01580827           0.02949642
     Eosinophils Neutrophils P-value Correlation      RMSE
2656 0.003613439  0.00000000       0   0.6626044 0.7868400
6146 0.000000000  0.01153972       0   0.2703227 0.9773981
> 
> com_sample = intersect(rownames(est_expr), colnames(ys))
> length(com_sample)
[1] 386
> 
> est_expr = est_expr[match(com_sample,rownames(est_expr)),]
> dim(est_expr)
[1] 386  25
> est_expr[1:2,]
     B cells naive B cells memory Plasma cells T cells CD8 T cells CD4 naive
2666    0.08349895     0.00000000   0.09598353  0.04126073                 0
3918    0.01612252     0.02344793   0.10125154  0.00000000                 0
     T cells CD4 memory resting T cells CD4 memory activated
2666                  0.2925322                   0.00000000
3918                  0.3002881                   0.05160733
     T cells follicular helper T cells regulatory (Tregs) T cells gamma delta
2666                         0                          0          0.00000000
3918                         0                          0          0.01524338
     NK cells resting NK cells activated   Monocytes Macrophages M0
2666        0.0323038        0.003657673 0.033309429      0.0000000
3918        0.0000000        0.048296514 0.002839234      0.0380912
     Macrophages M1 Macrophages M2 Dendritic cells resting
2666     0.00000000      0.1134653             0.000000000
3918     0.09325801      0.1829254             0.003437655
     Dendritic cells activated Mast cells resting Mast cells activated
2666                0.06533773         0.21096783                    0
3918                0.03316260         0.06334928                    0
     Eosinophils Neutrophils P-value Correlation      RMSE
2666  0.02768286 0.000000000       0   0.4921266 0.8748991
3918  0.02279562 0.003883675       0   0.4611630 0.8883235
> 
> ys     = subset(ys,select = match(com_sample,colnames(ys)))
> eta <- purity
> eta = eta[match(com_sample,eta$patient_id)]
> dim(ys)
[1] 966 386
> ys[1:2,1:4]
       2666     3918     4112     1679
1: 0.528804 0.427194 0.378801 0.284249
2: 0.742051 0.708419 0.631221 0.654159
> 
> table(colnames(ys) == rownames(est_expr))

TRUE 
 386 
> table(rownames(ys) == rownames(mu))

FALSE 
  966 
> 
> #----------------------------------------------------------------------
> # collapse cell types from expression data into fewer cell types
> #----------------------------------------------------------------------
> 
> deconv_expr = matrix(NA, nrow = nrow(est_expr),ncol = length(cellTypes))
> colnames(deconv_expr) = cellTypes 
> rownames(deconv_expr) = rownames(est_expr)
> colnames(est_expr)
 [1] "B cells naive"                "B cells memory"              
 [3] "Plasma cells"                 "T cells CD8"                 
 [5] "T cells CD4 naive"            "T cells CD4 memory resting"  
 [7] "T cells CD4 memory activated" "T cells follicular helper"   
 [9] "T cells regulatory (Tregs)"   "T cells gamma delta"         
[11] "NK cells resting"             "NK cells activated"          
[13] "Monocytes"                    "Macrophages M0"              
[15] "Macrophages M1"               "Macrophages M2"              
[17] "Dendritic cells resting"      "Dendritic cells activated"   
[19] "Mast cells resting"           "Mast cells activated"        
[21] "Eosinophils"                  "Neutrophils"                 
[23] "P-value"                      "Correlation"                 
[25] "RMSE"                        
> 
> other = rowSums(est_expr[,c(10,19,20,21)])
> deconv_expr[,"B"]    = rowSums(est_expr[,1:3])/0.4
> deconv_expr[,"CD4T"] = rowSums(est_expr[,5:8])/0.4
> deconv_expr[,"CD8T"] = as.matrix(est_expr[,4])/0.4
> deconv_expr[,"Treg"] = as.matrix(est_expr[,9])/0.4
> deconv_expr[,"NK"] = rowSums(est_expr[,11:12])/0.42
> deconv_expr[,"Monocyte"] = rowSums(est_expr[,13:18])/1.40
> deconv_expr[,"Neutrophil"] = as.matrix(est_expr[,22])/0.15
> deconv_expr = deconv_expr / rowSums(deconv_expr)
> 
> dim(deconv_expr)
[1] 386   7
> deconv_expr[1:2,]
          CD4T       CD8T   Monocyte         B         NK Neutrophil Treg
2666 0.4810372 0.06784876 0.09965591 0.2951393 0.05631877  0.0000000    0
3918 0.5412679 0.00000000 0.15544724 0.2166053 0.07074979  0.0159298    0
> 
> #---------------------------------------------------------------------
> # Compare results with different methods and with expression data
> #---------------------------------------------------------------------
> 
> eta = eta$purity
> summary(eta)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0900  0.3200  0.4350  0.4567  0.5800  1.0000 
> eta[which(eta > 0.99)] = 0.99
> 
> temp <- rownames(deconv_expr)
> deconv_expr <- diag(1-eta) %*% deconv_expr
> rownames(deconv_expr) <- temp
> 
> mu[mu < 0.05] = 0.05
> mu[mu > 0.95] = 0.95
> 
> penalty = dim(ys)[1]*(10^seq(-2,1,1)) 
> 
> methods = c("LaplaceEM","OriEM","svr","ls","rls","qp")
> rho     = array(data = NA, dim = c(ncol(ys), length(cellTypes), length(methods)),
+                 dimnames = list(colnames(ys), cellTypes, methods))
> 
> alpha   = rep(1/length(cellTypes), length(cellTypes))
> simsize = ncol(ys)
> ys <- as.matrix(ys)
> C = c(0.1,1/sqrt(10),1,sqrt(10),10)
> 
> for(j in 1:ncol(ys)){
+   if(j %% 10 == 0){ cat(j, date(), "\n") }
+   y    = ys[,j]
+   X    = as.data.frame(mu)
+   Xmat = mu
+   
+   cv_svr = rep(0,5)
+   svrmodel1       = svm(y~., data = X, kernel='linear', cost=0.1, cross=5)
+   cv_svr[1]       = mean(svrmodel1$MSE)
+   svrmodel2       = svm(y~., data = X, kernel='linear', cost=1/sqrt(10), cross=5)
+   cv_svr[2]       = mean(svrmodel2$MSE)
+   svrmodel3       = svm(y~., data = X, kernel='linear', cost=1, cross=5)
+   cv_svr[3]       = mean(svrmodel2$MSE)
+   svrmodel4       = svm(y~., data = X, kernel='linear', cost=sqrt(10), cross=5)
+   cv_svr[4]       = mean(svrmodel2$MSE)
+   svrmodel5       = svm(y~., data = X, kernel='linear', cost=10, cross=5)
+   cv_svr[5]       = mean(svrmodel5$MSE)
+   best_svr        = which.min(cv_svr)
+   svrmodel        = svm(y~., data = X, kernel='linear', cost=C[best_svr])
+   temp            = (t(svrmodel$coefs) %*% svrmodel$SV)
+   temp[temp < 0]  = 0
+   rho[j,,'svr']   = (1-eta[j])*temp/sum(temp)
+   
+   temp            = lm(y ~ .-1,data = X)$coefficients
+   temp[temp < 0]  = 0
+   rho[j,,'ls']    = (1-eta[j])*temp/sum(temp)
+   
+   temp            = rlm(y ~ .-1,data = X)$coefficients
+   temp[temp < 0]  = 0
+   rho[j,,'rls']   = (1-eta[j])*temp/sum(temp)
+   
+   A = rbind(diag(rep(1,length(cellTypes))),rep(-1,length(cellTypes)))
+   b = c(rep(0,length(cellTypes)),-1+eta[j])
+   D = t(Xmat) %*% Xmat
+   d = t(t(Xmat) %*% y)
+   rho[j,,'qp']   = (solve.QP(D,d,t(A),b)$solution)
+ }
10 Fri May 22 17:10:42 2020 
20 Fri May 22 17:11:05 2020 
30 Fri May 22 17:11:26 2020 
40 Fri May 22 17:11:49 2020 
50 Fri May 22 17:12:11 2020 
60 Fri May 22 17:12:33 2020 
70 Fri May 22 17:12:58 2020 
80 Fri May 22 17:13:21 2020 
90 Fri May 22 17:13:43 2020 
100 Fri May 22 17:14:05 2020 
110 Fri May 22 17:14:27 2020 
120 Fri May 22 17:14:51 2020 
130 Fri May 22 17:15:14 2020 
140 Fri May 22 17:15:36 2020 
150 Fri May 22 17:15:59 2020 
160 Fri May 22 17:16:22 2020 
170 Fri May 22 17:16:45 2020 
180 Fri May 22 17:17:07 2020 
190 Fri May 22 17:17:31 2020 
200 Fri May 22 17:17:54 2020 
210 Fri May 22 17:18:18 2020 
220 Fri May 22 17:18:42 2020 
230 Fri May 22 17:19:04 2020 

There were 50 or more warnings (use warnings() to see the first 50)
Execution halted
