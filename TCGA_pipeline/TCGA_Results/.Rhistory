print(cnt.plot.y)
dev.off()
}
return(list(Xt = count.x,Yt = count.y))
}
mu <- rep(0,2*r^2)
omega <- genrate(A,m,mu,figure = TRUE)
z <- sample.int(r,size=p, replace=TRUE,prob = rep(1/r,r))
print(table(z))
count <- genpois(omega,time.total,z=z, figure=TRUE)
max(count$Xt)
max(count$Yt)
genpois <- function(omega,time.total,z=1:p,scale = 1,figure = FALSE){
# compute compensators at each time interval (numeric riemannian integral)
m <- ncol(omega)
comp <- matrix(0,nrow = 2*r^2,ncol = time.total)
dt <- time.total/(m-1)
for(i in 1:time.total){
comp[,i] <- rowSums(exp(omega[,((i-1)*((m-1)/time.total)+1):(i*((m-1)/time.total))])*dt)
}
theta <- abs(rcauchy(p))
print(summary(theta))
for(k in 1:r){
print(k)
id <- which(z==k)
print(length(id))
theta[id] <- theta[id]/sum(theta[id])*scale
}
print(summary(theta))
# Incorporate the block structure
lambda.x <- lambda.y <- matrix(0,nrow = p^2, ncol = time.total)
for(i in 1:p){
for(j in 1:p){
lambda.x[i*(r-1)+j,] = theta[i]*theta[j]*comp[z[i]*(r-1) + z[j],]
lambda.y[i*(r-1)+j,] = theta[i]*theta[j]*comp[r^2 + z[i]*(r-1) + z[j],]
}
}
# generate Poisson distribution from the time interval
count.x <- count.y <- matrix(0,nrow = p^2, ncol = time.total)
for(i in 2:time.total){
count.x[,i] <- count.x[,i-1] + rpois(p,lambda.x[,i])
count.y[,i] <- count.y[,i-1] + rpois(p,lambda.y[,i])
}
# plot the count values at time t=1,2,...,time.total.
if(figure){
summary.x <- data.table(id = rep(1:time.total,7),
variable = rep(c('mean','25-quantile','75-quantile', 'median',
'05-quantile','95-quantile','max'),each=time.total),
value = c(colMeans(count.x), apply(count.x,2, quantile,probs=0.25),
apply(count.x,2, quantile,probs=0.75),
apply(count.x,2, quantile,probs=0.5),
apply(count.x,2, quantile,probs=0.05),
apply(count.x,2, quantile,probs=0.95),
apply(count.x,2,max)))
summary.y <- data.table(id = rep(1:time.total,7),
variable = rep(c('mean','25-quantile','75-quantile', 'median',
'05-quantile','95-quantile','max'),each=time.total),
value = c(colMeans(count.y), apply(count.y,2, quantile,probs=0.25),
apply(count.y,2, quantile,probs=0.75),
apply(count.y,2, quantile,probs=0.5),
apply(count.y,2, quantile,probs=0.05),
apply(count.y,2, quantile,probs=0.95),
apply(count.y,2,max)))
pdf(sprintf('%s/cnt_plot_x_var_sparse.pdf',figurepath))
cnt.plot.x <- ggplot(summary.x,aes(x=id,y=value, color = variable))+
geom_line()
print(cnt.plot.x)
dev.off()
pdf(sprintf('%s/cnt_plot_y_var_sparse.pdf',figurepath))
cnt.plot.y <- ggplot(summary.y,aes(x=id,y=value, color = variable))+
geom_line()
print(cnt.plot.y)
dev.off()
}
return(list(Xt = count.x,Yt = count.y))
}
mu <- rep(0,2*r^2)
omega <- genrate(A,m,mu,figure = TRUE)
z <- sample.int(r,size=p, replace=TRUE,prob = rep(1/r,r))
print(table(z))
count <- genpois(omega,time.total,z=z, scale = 100, figure=TRUE)
max(count$Xt)
max(count$Yt)
genrate <- function(A,m,mu = rep(0,2*r^2), scale = 1,figure = FALSE){
omega <- matrix(0, nrow = 2*r^2, ncol = m)
dt <- time.total/(m-1)
omega[,1] <- mu
for(i in 2:m){
omega[,i] <- omega[,i-1] + A %*%(mu -  omega[,i-1])*dt + scale*sqrt(dt) * rnorm(r,0,1)
}
if(figure){
tomega <- as.data.table(t(exp(omega)))
tomega <- melt(tomega)
tomega$id <- rep(1:m,2*r^2)
pdf(sprintf('%s/rate-var.pdf',figurepath))
rate <- ggplot(tomega,aes(x=id,y=value, color = variable))+geom_line()
print(rate)
dev.off()
}
return(omega)
}
omega <- genrate(A,m,mu,scale = 10,figure = TRUE)
z <- sample.int(r,size=p, replace=TRUE,prob = rep(1/r,r))
print(table(z))
count <- genpois(omega,time.total,z=z, scale = 1, figure=TRUE)
omega <- genrate(A,m,mu,scale = sqrt(10),figure = TRUE)
z <- sample.int(r,size=p, replace=TRUE,prob = rep(1/r,r))
print(table(z))
count <- genpois(omega,time.total,z=z, scale = 1, figure=TRUE)
max(count$Xt)
max(count$Yt)
omega <- genrate(A,m,mu,scale = 10,figure = TRUE)
z <- sample.int(r,size=p, replace=TRUE,prob = rep(1/r,r))
print(table(z))
count <- genpois(omega,time.total,z=z, scale = 1, figure=TRUE)
max(count$Xt)
max(count$Yt)
load('subsample_coad.RData')
View(subsample.coad)
View(subsample.luad)
load('subsample_luad.RData')
load('subsample_lusc.RData')
load('subsample_skcm.RData')
View(subsample.luad)
View(subsample.lusc)
View(subsample.skcm)
load('subsample_coad.RData')
load('subsample_coad.RData')
load('deconv_methy_COAD.RData')
load('TCGA-results/deconv_methy_COAD.RData')
load('~/TCGA-results/deconv_methy_COAD.RData')
load('~/TCGA-result/deconv_methy_COAD.RData')
setwd('~/barcode')
load('./TCGA-result/deconv_methy_COAD.RData')
load('deconv_methy_COAD.RData')
head(deconv_methy)
head(deconv_methy_COAD)
load('deconv_methy_COAD.RData')
load('subsample_COAD.RData')
subsample.coad
load('deconv_expr_COAD.RData')
colnames(deconv_expr_COAD)
rownames(deconv_expr_COAD)
load('deconv_expr_LUAD.RData')
load('subsample_luad.RData')
colnames(deconv_expr_LUAD)
rownames(deconv_expr_LUAD)
View(subsample.luad)
subsample.coad$patient_id2 = colnames(deconv_expr_COAD)
subsample.coad$barcode2 = match(subsample.coad$patient_id2, subsample.coad$barcode)
View(subsample.coad)
subsample.coad$patient_id2 = rownames(deconv_expr_COAD)
subsample.coad$barcode2 = match(subsample.coad$patient_id2, subsample.coad$barcode)
View(subsample.coad)
subsample.coad$barcode$match(subsample.coad$patient_id2,subsample.coad$patient_id)
subsample.coad$barcode[match(subsample.coad$patient_id2,subsample.coad$patient_id)]
subsample.coad$barcode2 = subsample.coad$barcode[match(subsample.coad$patient_id2,subsample.coad$patient_id)]
View(subsample.coad)
subsample.coad <- subsample.coad[,c(1,4,5)]
View(subsample.coad)
colnames(subsample.coad) <- c('num','patient_id','barcode')
View(subsample.coad)
save(subsample.coad, file = 'subsample_COAD.RData')
subsample.luad$patient_id2 = rownames(deconv_expr_LUAD)
subsample.luad$barcode2 = subsample.luad$barcode[match(subsample.coad$patient_id2,subsample.coad$patient_id)]
subsample.luad$barcode2 = subsample.luad$barcode[match(subsample.luad$patient_id2,subsample.luad$patient_id)]
View(subsample.luad)
rownames(deconv_expr_LUAD)
subsample.luad <- data.frame(num = 1:407, patient_id = subsample.luad$patient_id2, barcode = subsample.luad$barcode2)
View(subsample.luad)
head(deconv_expr_LUAD)
load('deconv_expr_LUSC.RData')
load('subsample_lusc.RData')
subsample.lusc$patient_id2 = rownames(deconv_expr_LUSC)
subsample.lusc$barcode2 = subsample.lusc$barcode[match(subsample.lusc$patient_id2,subsample.lusc$patient_id)]
View(subsample.lusc)
subsample.luad <- data.frame(num = 1:327, patient_id = subsample.lusc$patient_id2, barcode = subsample.lusc$barcode2)
View(subsample.lusc)
View(subsample.lusc)
subsample.luad <- data.frame(num = 1:407, patient_id = subsample.luad$patient_id2, barcode = subsample.luad$barcode2)
View(subsample.luad)
load('subsample.luad')
load('subsample_luad.RData')
View(subsample.luad)
subsample.luad$patient_id2 = rownames(deconv_expr_LUAD)
subsample.luad$barcode2 = subsample.luad$barcode[match(subsample.luad$patient_id2,subsample.luad$patient_id)]
subsample.luad <- data.frame(num = 1:407, patient_id = subsample.luad$patient_id2, barcode = subsample.luad$barcode2)
View(subsample.luad)
head(deconv_expr_LUAD)
save('subsample.luad', file = 'subsample_luad.RData')
View(subsample.lusc)
subsample.lusc <- data.frame(num = 1:327, patient_id = subsample.lusc$patient_id2, barcode = subsample.lusc$barcode2)
View(subsample.lusc)
head(deconv_expr_LUSC)
load('subsample_skcm.RData')
subsample.skcm$patient_id2 = rownames(deconv_expr_SKCM)
> subsample.skcm$barcode2 = subsample.skcm$barcode[match(subsample.skcm$patient_id2,subsample.skcm$patient_id)]
load('deconv_expr_SKCM.RData')
subsample.skcm$patient_id2 = rownames(deconv_expr_SKCM)
> subsample.skcm$barcode2 = subsample.skcm$barcode[match(subsample.skcm$patient_id2,subsample.skcm$patient_id)]
subsample.skcm$patient_id2 = rownames(deconv_expr_SKCM)subsample.skcm$barcode2 = subsample.skcm$barcode[match(subsample.skcm$patient_id2,subsample.skcm$patient_id)]
subsample.skcm$barcode2 = subsample.skcm$barcode[match(subsample.skcm$patient_id2,subsample.skcm$patient_id)]
View(subsample.skcm)
rownames(deconv_expr_SKCM)
subsample.skcm <- data.frame(num = 1:327, patient_id = subsample.skcm$patient_id2, barcode = subsample.lusc$barcode2)
subsample.skcm <- data.frame(num = 1:380, patient_id = subsample.skcm$patient_id2, barcode = subsample.lusc$barcode2)
View(subsample.skcm)
subsample.skcm <- data.frame(num = 1:380, patient_id = subsample.skcm$patient_id2, barcode = subsample.skcm$barcode2)
View(subsample.skcm)
save(subsample.skcm, file= 'subsample_skcm.RData')
head(subsample.skcm)
head(deconv_expr_SKCM)
head(subsample.lusc)
head(deconv_expr_LUSC)
head(subsample.luad)
head(deconv_expr_LUAD)
head(deconv_expr_COAD)
head(subsample.coad)
setwd('~')
load('ref_946probes.RData')
load('ref_966probes.RData')
View(mu)
dim(mu)
load(probe2use)
probe2use
load('probes.RData')
? solve.QP
library(devtools)
install_github('Hanyuz1996/EMeth',subdir = 'EMeth')
library(devtools)
install_github('Hanyuz1996',subdir='EMeth')
install_github('Hanyuz1996/EMeth',subdir='EMeth')
library(EMeth)
ys.setlocale(category = "LC_ALL", locale = "English_United States.1252") Sys.setenv(LANG="en_US.UTF-8") Sys.setenv(LC_ALL="en_US.UTF-8")
ys.setlocale(category = "LC_ALL", locale = "English_United States.1252")
Sys.setlocale(category = "LC_ALL", locale = "English_United States.1252")
Sys.setenv(LANG="en_US.UTF-8")
Sys.setenv(LC_ALL="en_US.UTF-8")
library(devtools)
install_github('Hanyuz1996/EMeth',subdir='EMeth')
library(EMeth)
? duplicated
x <- c(9:20, 1:5, 3:7, 0:8)
? stopifnot
library(ks)
install.packages('ks')
library(vars)
library(ks)
source('gen-simulate-data.var.R')
path <- '/Users/mac/Dropbox/Peng,Sida/Hanyu/code'
setwd(path)
source('gen-simulate-data.var.R')
source('gen-simulate-data-var.R')
source('gen-simulate-data-var.R')
path <- '/Users/mac/Dropbox/Peng,Sida/Hanyu/code'
setwd(path)
source('gen-simulate-data-var.R')
? rpois
test.theta <- rnorm(0,1,1000)
test.X <- rpois(1000,test.theta)
mean(test.X)
test.theta <- rnorm(0,1,1000)
test.X <- rpois(1000,exp(test.theta))
mean(test.X)
exp(test.theta)
test.theta
test.theta <- rnorm(1000,0,1)
test.X <- rpois(1000,exp(test.theta))
mean(test.X)
exp(0.5)
test.theta <- rnorm(10000,0,1)
test.X <- rpois(10000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(10000,0,1)
test.X <- rpois(10000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(10000,0,1)
test.X <- rpois(10000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(10000,0,1)
test.X <- rpois(10000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(10000,0,1)
test.X <- rpois(10000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(10000,0,1)
test.X <- rpois(10000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
test.theta <- rnorm(100000,0,1)
test.X <- rpois(100000,exp(test.theta))
mean(test.X)
exp(0.5)
autocor <- function(A,h,i,j){
I <- diag(2*r^2)
ksum <- kronecker(I,A) + kronecker(A,I)
Sigma <- invvec(solve(ksum,vec(sigma^2 * I)))
Kh <- Sigma %*% expm(A*h)
return(exp(0.5*Sigma[i,i]+0.5*Sigma[jj])*(exp(Kh[i,j])-1))
}
evalint2 <- function(A,Delta,i,j){
dt <- 0.01; numsub = Delta/dt
temp <- rep(0,numsub)
res <- 0
for(i in 1:numsub){
temp[i] <- autocor(A,dt*i,i,j)
res += i*temp[i]*dt*dt
}
res <- 2*res
return(res)
}
evalint2 <- function(A,Delta,i,j){
dt <- 0.01; numsub = Delta/dt
temp <- rep(0,numsub)
res <- 0
for(i in 1:numsub){
temp[i] <- autocor(A,dt*i,i,j)
res = res + i*temp[i]*dt*dt
}
res <- 2*res
return(res)
}
const = FALSE
mu <- rep(0,2*r^2)
r <- 2
mu <- rep(0,2*r^2)
sigma <- 2.5
omega <- genrate(A,0.01,time.total,mu,scale = sigma,figure = FALSE)
p<-48
r <- 2
time.total <- 11000
dt <- 0.01
setwd('~/Desktop/dMeth/TCGA_results')
load('deconv_expr_COAD.RData')
load('deconv_methy_COAD.RData')
deconv_expr <- deconv_expr_COAD
rho <-rho_COAD
utypes = intersect(cellTypes,colnames(deconv_expr))
utypes
cormat <- matrix(NA,nrow = length(utypes), ncol = length(methods))
colnames(cormat) <- methods
colnames(deconv_expr)
utypes = colnames(deconv_expr)
utypes
cormat <- matrix(NA,nrow = length(utypes), ncol = length(methods))
colnames(cormat) <- methods
rownames(cormat) <- utypes
methods <- c('EMeth','svr','ls','rls','qp')
cormat <- matrix(NA,nrow = length(utypes), ncol = length(methods))
colnames(cormat) <- methods
rownames(cormat) <- utypes
err <- matrix(NA,nrow = length(utypes), ncol = length(methods))
colnames(err) <- methods
rownames(err) <- utypes
for(i in 1:length(utypes)){
cormat[i,] <- sapply(1:length(methods), FUN = function(j){
cor(rho[,utypes[i],methods[j]],deconv_expr[,utypes[i]])
})
err[i,] <- sapply(1:length(methods), FUN = function(j){
sqrt(mean((rho[,utypes[i],methods[j]] - deconv_expr[,utypes[i]])^2))
})
}
pdf('correlation.pdf')
plist = list()
plist <- lapply(1:length(utypes),FUN = function(i){
tempdata = data.frame(methods,correlation = cormat[utypes[i],] )
corplot <- ggplot(tempdata,aes(methods,correlation)) +
geom_col()+ggtitle(utypes[i])
})
grid.arrange(grobs = plist, ncol = 2)
library(gridExtra)
pdf('correlation.pdf')
plist = list()
plist <- lapply(1:length(utypes),FUN = function(i){
tempdata = data.frame(methods,correlation = cormat[utypes[i],] )
corplot <- ggplot(tempdata,aes(methods,correlation)) +
geom_col()+ggtitle(utypes[i])
})
grid.arrange(grobs = plist, ncol = 2)
dev.off()
library(cowplot)
cormat
library(data.table)
melt(tempdata)
melt(cormat)
tempdata <- melt(as.data.table(cormat))
tempdata
pdf('correlation.pdf')
tempdata <- melt(as.data.table(cormat))
colnames(tempdata) <- c('Methods','Correlation')
p1 <- ggplot(tempdata,aes(x=Methods,y=Correlation)) + geom_boxplot() +
geom_point() + theme_cowplot() + ggtitle('Correlation for COAD')
print(p1)
dev.off()
pdf('correlation.pdf')
tempdata <- melt(as.data.table(cormat))
colnames(tempdata) <- c('Methods','Correlation')
tempdata$cellType = utypes
p1 <- ggplot(tempdata,aes(x=Methods,y=Correlation,color=cellType)) + geom_boxplot() +
geom_point() + theme_cowplot() + ggtitle('Correlation for COAD')
print(p1)
dev.off()
pdf('correlation.pdf')
tempdata <- melt(as.data.table(cormat))
colnames(tempdata) <- c('Methods','Correlation')
tempdata$cellType = rep(utypes,5)
p1 <- ggplot(tempdata,aes(x=Methods,y=Correlation,color=cellType)) + geom_boxplot() +
geom_point() + theme_cowplot() + ggtitle('Correlation for COAD')
print(p1)
dev.off()
tempdata <- melt(as.data.table(cormat))
colnames(tempdata) <- c('Methods','Correlation')
tempdata$cellType = rep(utypes,5)
p1 <- ggplot(tempdata,aes(x=Methods,y=Correlation)) + geom_boxplot() +
geom_point() + theme_cowplot() + ggtitle('Correlation for COAD')
print(p1)
dev.off()
tempdata <- melt(as.data.table(cormat))
colnames(tempdata) <- c('Methods','Correlation')
tempdata$cellType = rep(utypes,5)
p1 <- ggplot(tempdata,aes(x=Methods,y=Correlation)) + geom_boxplot() +
geom_point() + theme_cowplot() + ggtitle('Correlation for COAD')
print(p1)
dev.off()
tempdata <- melt(as.data.table(cormat))
colnames(tempdata) <- c('Methods','Correlation')
tempdata$cellType = rep(utypes,5)
p1 <- ggplot(tempdata,aes(x=Methods,y=Correlation)) + geom_boxplot() +
geom_point() + theme_cowplot() + ggtitle('Correlation for COAD')
print(p1)
dev.off()
pdf('correlation.pdf')
tempdata <- melt(as.data.table(cormat))
colnames(tempdata) <- c('Methods','Correlation')
tempdata$cellType = rep(utypes,5)
p1 <- ggplot(tempdata,aes(x=Methods,y=Correlation)) + geom_boxplot() +
geom_point() + theme_cowplot() + ggtitle('Correlation for COAD')
print(p1)
dev.off()
pdf('correlation.pdf')
tempdata <- melt(as.data.table(cormat))
colnames(tempdata) <- c('Methods','Correlation')
tempdata$cellType = rep(utypes,5)
p1 <- ggplot(tempdata,aes(x=Methods,y=Correlation)) + geom_boxplot() +
geom_point(aes(size = 5,colour = cellType)) + theme_cowplot() + ggtitle('Correlation for COAD')
print(p1)
dev.off()
pdf('correlation.pdf')
tempdata <- melt(as.data.table(cormat))
colnames(tempdata) <- c('Methods','Correlation')
tempdata$cellType = rep(utypes,5)
p1 <- ggplot(tempdata,aes(x=Methods,y=Correlation)) + geom_boxplot() +
geom_point(size = 5,aes(colour = cellType)) + theme_cowplot() + ggtitle('Correlation for COAD')
print(p1)
dev.off()
loloadad
load('deconv_expr_COAD.RData')
load('deconv_methy_COAD.RData')
expr <- deconv_expr_COAD
methy <- deconv_methy_COAD
methy <- rho_COAD
dimnames(methy)
dimnames(methy)[[1]] == rownames(deconv_expr_COAD)
load('deconv_methy_LUAD.RData')
load('deconv_expr_LUAD.RData')
dimnames(rho_LUAD)[[1]] == rownames(deconv_expr_LUAD)
rho_LUAD[1,,]
deconv_expr_LUAD
